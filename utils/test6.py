from particles_import import BoolToSetKV, ObjectP, dynamicparam, Discontinued

t = """
'Position Within Sphere Random': 'C_INIT_CreateWithinSphere',
    'speed_max': 'm_fSpeedMax',
    'speed_min': 'm_fSpeedMin',
    'distance_min': 'm_fRadiusMin',
    'distance_max': 'm_fRadiusMax',
    'speed_in_local_coordinate_system_max': 'm_LocalCoordinateSystemSpeedMax',
    'speed_in_local_coordinate_system_min': 'm_LocalCoordinateSystemSpeedMin',
    'distance_bias': 'm_vecDistanceBias',
    'distance_bias_absolute_value': 'm_vecDistanceBiasAbs',
    'speed_random_exponent': 'm_fSpeedRandExp',
    'control_point_number': 'm_nControlPointNumber',
    'bias in local system': 'm_bLocalCoords',
    'randomly distribute to highest supplied Control Point': Discontinued(10),
    'randomly distribution growth time': 'm_flEndCPGrowthTime',
    'scale cp (distance/speed/local speed)': 'm_nScaleCP',
    'create in model': Discontinued(),

'Move Particles Between 2 Control Points': 'C_INIT_MoveBetweenPoints',
    'start offset': 'm_flStartOffset',
    'end offset': 'm_flEndOffset',
    'maximum speed': 'm_flSpeedMax',
    'minimum speed': 'm_flSpeedMin',
    'end spread': 'm_flEndSpread',
    'end control point': 'm_nEndControlPointNumber',
'Lifetime Random': 'C_INIT_RandomLifeTime',
    'lifetime_min': 'm_fLifetimeMin',
    'lifetime_max': 'm_fLifetimeMax',
    'lifetime_random_exponent': 'm_fLifetimeRandExponent',

'Color Random': 'C_INIT_RandomColor',
    'tint clamp max': 'm_TintMax',
    'tint clamp min': 'm_TintMin',
    'tint update movement threshold': 'm_flUpdateThreshold',
    'light amplification amount': 'm_flLightAmplification',
    'color1': 'm_ColorMin',
    'color2': 'm_ColorMax',
    'tint_perc': 'm_flTintPerc',
    'tint blend mode': 'm_nTintBlendMode',
    'tint control point': 'm_nTintCP',

'Rotation Random': 'C_INIT_RandomRotation',
    'randomly_flip_direction': 'm_bRandomlyFlipDirection',
    'rotation_offset_max': 'm_flDegreesMax',
    'rotation_offset_min': 'm_flDegreesMin',
    'rotation_initial': 'm_flDegrees',
    'rotation_random_exponent': 'm_flRotationRandExponent',
    #'rotation_field': 'm_nFieldOutput',

'Alpha Random': 'C_INIT_RandomAlpha',
    #'alpha_field': 'm_nFieldOutput',
    'alpha_max': 'm_nAlphaMin',
    'alpha_min': 'm_nAlphaMax',
    'alpha_random_exponent': 'm_flAlphaRandExponent',
    'run for killed parent particles': Discontinued(),

'Position Modify Offset Random': 'C_INIT_PositionOffset',
    'offset max': 'm_OffsetMin',
    'offset min': 'm_OffsetMax',
    'offset in local space 0/1': 'm_bLocalCoords',
    'offset proportional to radius 0/1': 'm_bProportional',

'Sequence Random': 'C_INIT_RandomSequence',
    'sequence_max': 'm_nSequenceMax',
    'sequence_min': 'm_nSequenceMin',
    'shuffle': 'm_bShuffle',
    'linear': 'm_bLinear',

'Sequence Two Random': 'C_INIT_RandomSecondSequence',
'Radius Random': 'C_INIT_RandomRadius',
    'radius_min': 'm_flRadiusMin',
    'radius_max': 'm_flRadiusMax',
    'radius_random_exponent': 'm_flRadiusRandExponent',

'Rotation Speed Random': 'C_INIT_RandomRotationSpeed',
    'rotation_speed_random_min': 'm_flDegreesMin',
    'rotation_speed_random_max': 'm_flDegreesMax',
    'rotation_speed_constant': 'm_flDegrees',#Discontinued(), # unsure
    'rotation_speed_random_exponent': 'm_flRotationRandExponent',
    # m_bRandomlyFlipDirection

'Position Within Box Random': 'C_INIT_CreateWithinBox',
    'max': 'm_vecMax',
    'min': 'm_vecMin',
    'use local space': 'm_bLocalSpace',

'Rotation Yaw Flip Random': 'C_INIT_RandomYawFlip',
    'Flip Percentage': 'm_flPercent',

'remap initial scalar': 'C_INIT_RemapScalar',
    'input minimum': 'm_flInputMin',
    'input maximum': 'm_flInputMax',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'output is scalar of initial random range': BoolToSetKV('m_nSetMethod', 'PARTICLE_SET_SCALE_INITIAL_VALUE'), # unsure
    'output field': 'm_nFieldOutput', # "{val}" in vpcf?
    'input field': 'm_nFieldInput',

'Position Modify Warp Random': 'C_INIT_PositionWarp',
    'warp min': 'm_vecWarpMin',
    'warp max': 'm_vecWarpMax',
    'warp transition time (treats min/max as start/end sizes)': 'm_flWarpTime',
    'warp transition start time': 'm_flWarpStartTime',
    'reverse warp (0/1)': 'm_bInvertWarp',
    'use particle count instead of time': 'm_bUseCount',
    'local coordinate space': Discontinued(),

    # m_nScaleControlPointNumber m_nRadiusComponent m_flPrevPosScale
'Velocity Noise': 'C_INIT_InitialVelocityNoise',
    'Time Noise Coordinate Scale': dynamicparam('m_flNoiseScale'),
    'Spatial Noise Coordinate Scale': dynamicparam('m_flNoiseScaleLoc'),
    'Absolute Value': 'm_vecAbsVal',
    'Apply Velocity in Local Space (0/1)': 'm_bLocalSpace',
    'Invert Abs Value': 'm_vecAbsValInv',
    'Spatial Coordinate Offset': dynamicparam('m_vecOffsetLoc'),
    'Time Coordinate Offset': dynamicparam('m_flOffset'),
    'Control Point Number': 'm_nControlPointNumber',

'Trail Length Random': 'C_INIT_RandomTrailLength',
    'length_min': 'm_flMinLength',
    'length_max': 'm_flMaxLength',
    'length_random_exponent': 'm_flLengthRandExponent',

'Lifetime From Sequence': 'C_INIT_SequenceLifeTime',
    'Frames Per Second': 'm_flFramerate',

'Remap Initial Scalar': 'C_INIT_RemapScalar', # 'remap initial scalar' duplicate wtf
    'emitter lifetime end time (seconds)': 'm_flStartTime',
    'emitter lifetime start time (seconds)': 'm_flEndTime',
    'only active within specified input range': 'm_bActiveRange',

'Remap Initial Distance to Control Point to Scalar': 'C_INIT_DistanceToCPInit',
    'distance minimum': 'm_flInputMin',
    'distance maximum': 'm_flInputMax',
    'control point': 'm_nStartCP',
    'only active within specified distance': 'm_bActiveRange',
    'LOS Failure Scalar': 'm_flLOSScale',
    'Maximum Trace Length': 'm_flMaxTraceLength',
    'LOS collision group': 'm_CollisionGroupName',
    'ensure line of sight': 'm_bLOS',
'Position Along Ring': 'C_INIT_RingWave',
    'initial radius': 'm_flInitialRadius',
    'thickness': 'm_flThickness',
    'min initial speed': 'm_flInitialSpeedMin',
    'max initial speed': 'm_flInitialSpeedMax',
    'even distribution': 'm_bEvenDistribution',
    'XY velocity only': 'm_bXYVelocityOnly',
    'even distribution count': 'm_flParticlesPerOrbit',
    'control point number': 'm_nControlPointNumber',
    'Override CP (X/Y/Z *= Radius/Thickness/Speed)': 'm_nOverrideCP',
    'pitch': 'm_flPitch',
    'yaw': 'm_flYaw',
    'roll': 'm_flRoll',
    # m_nOverrideCP2
'Velocity Random': 'C_INIT_VelocityRandom',
    'random_speed_max': dynamicparam('m_fSpeedMax'),
    'random_speed_min': dynamicparam('m_fSpeedMin'),
    # this one has got 'speed_in_local_coordinate_system_min', etc from C_INIT_CreateWithinSphere random
    # but on this one its a dynamicparam, so can you skip dynamic paraming on this (and most that dont use random) #TODO
'Position From Parent Particles': 'C_INIT_CreateFromParentParticles',
    'Inherited Velocity Scale': 'm_flVelocityScale',
    'Random Parent Particle Distribution': 'm_bRandomDistribution',
    # m_flIncrement = 11.0 m_bRandomDistribution = true m_nRandomSeed = 1 m_bSubFrame = false
'Remap Scalar to Vector': 'C_INIT_RemapScalarToVector',
    'use local system': 'm_bLocalCoords',
'Scalar Random': 'C_INIT_RandomScalar',
    # this likely has m_flMin & clashes with m_vecMin TODO FIXME
'Remap Control Point to Scalar': 'C_INIT_RemapCPtoScalar',
    'input control point number': 'm_nCPInput',
    'input field 0-2 X/Y/Z': 'm_nField',
'Position on Model Random': 'C_INIT_CreateOnModel',
    'force to be inside model': 'm_nForceInModel',
    'direction bias': 'm_vecDirectionBias',
    'bias in local space': 'm_bLocalCoords',
    'model hitbox scale': 'm_flHitBoxScale',
    'hitbox scale': 'm_flHitBoxScale',
    'desired hitbox': 'm_nDesiredHitbox',
    # m_nHitboxValueFromControlPointIndex m_bUseBones m_flBoneVelocity 'inherited' m_flMaxBoneVelocity
'Velocity Set from Control Point': 'C_INIT_VelocityFromCP',
'Position Modify Place On Ground': 'C_INIT_PositionPlaceOnGround',
    'collision group': 'm_CollisionGroupName',
    'max trace length': 'm_flMaxTraceLength',
    'kill on no collision': 'm_bKill',
    'offset': 'm_flOffset',
    'set normal': 'm_bSetNormal',
    'include water': 'm_bIncludeWater',
'Velocity Inherit from Control Point': 'C_INIT_InheritVelocity',
    'velocity scale': 'm_flVelocityScale',
'Remap Noise to Scalar': 'C_INIT_CreationNoise',
    'time noise coordinate scale': 'm_flNoiseScale',
    'spatial noise coordinate scale': 'm_flNoiseScaleLoc',
    'world time noise coordinate scale': 'm_flWorldTimeScale',
    'time coordinate offset': 'm_flOffset',
    'spatial coordinate offset': 'm_vecOffsetLoc',
    'absolute value': 'm_bAbsVal',
    'invert absolute value': 'm_bAbsValInv',
'Lifetime Pre-Age Noise': 'C_INIT_AgeNoise',
    'start age minimum': 'm_flAgeMin',
    'start age maximum': 'm_flAgeMax',
'Lifetime from Time to Impact': 'C_INIT_LifespanFromVelocity',
    'maximum trace length': 'm_flMaxTraceLength',
    'trace collision group': 'm_CollisionGroupName',
    'trace offset': 'm_flTraceOffset',
    'trace recycle tolerance': 'm_flTraceTolerance',
    'maximum points to cache': 'm_nMaxPlanes',
    'bias distance': 'm_vecComponentScale',
    # m_bIncludeWater = false
'Position from Parent Cache': ('C_INIT_CreateFromPlaneCache', {
    'Local Offset Max': 'm_vecOffsetMax',
    'Local Offset Min': 'm_vecOffsetMin',
    'Set Normal': 'm_bUseNormal', #that clashes with another m_bSetNormal
}),
'Rotation Yaw Random': 'C_INIT_RandomYaw',
    'yaw_offset_min': 'm_flDegreesMin',
    'yaw_offset_max': 'm_flDegreesMax',
    'yaw_random_exponent': 'm_flRotationRandExponent',
    'yaw_initial': 'm_flDegrees',
'Position Along Path Sequential': 'C_INIT_CreateSequentialPathV2', # wonder what happened to v1
    'particles to map from start to end': 'm_flNumToAssign',
    'maximum distance': 'm_fMaxDistance',
    'restart behavior (0 = bounce, 1 = loop )': 'm_bLoop',
    'Use sequential CP pairs between start and end point': 'm_bCPPairs',
    'Save Offset': 'm_bSaveOffset',
    **(_m_PathParams:={'bulge': ObjectP('m_PathParams', 'm_flBulge'), # random bulge? m_flBulge
    'start control point number': ObjectP('m_PathParams', 'm_nStartControlPointNumber'),
    'end control point number': ObjectP('m_PathParams', 'm_nEndControlPointNumber'),
    'bulge control 0=random 1=orientation of start pnt 2=orientation of end point':\
        ObjectP('m_PathParams', 'm_nBulgeControl'),}),
    # m_vStartPointOffset m_vMidPointOffset m_vEndOffset
'Velocity Repulse from World': 'C_INIT_InitialRepulsionVelocity',
    'Trace Length': 'm_flTraceLength',
    'Inherit from Parent': 'm_bInherit',
    'minimum velocity': 'm_vecOutputMin',
    'maximum velocity': 'm_vecOutputMax',
    'control points to broadcast to children (n + 1)': 'm_nChildCP',
    'Offset instead of accelerate': 'm_bTranslate',
    'Per Particle World Collision Tests': 'm_bPerParticle',
    'Use radius for Per Particle Trace Length': 'm_bPerParticleTR',
    'Offset proportional to radius 0/1': 'm_bProportional',
    'Child Group ID to affect': 'm_nChildGroupID',
'Cull relative to Ray Trace Environment': 'C_INIT_RtEnvCull',
    #'test direction': 'm_vecTestDir',
    'cull on miss': 'm_bCullOnMiss',
    'cull normal': 'm_vecTestNormal',
    'ray trace environment name': 'm_RtEnvName',
    'velocity test adjust lifespan': 'm_bLifeAdjust',
    'use velocity for test direction': 'm_bUseVelocity',
'Color Lit Per Particle': 'C_INIT_ColorLitPerParticle',
    'light bias': 'm_flTintPerc',
    'position_within_sphere': Discontinued(),
'Position Along Path Random': 'C_INIT_CreateAlongPath',
    'randomly select sequential CP pairs between start and end points': '',
    **_m_PathParams,
'Remap Particle Count to Scalar': 'C_INIT_RemapParticleCountToScalar',
'Remap Control Point to Vector': 'C_INIT_RemapCPtoVector',
    'offset position': 'm_bOffset',
    'accelerate position': 'm_bAccelerate',
    'local space CP': 'm_nLocalSpaceCP',
'Normal Modify Offset Random': 'C_INIT_NormalOffset',
    'normalize output 0/1': 'm_bNormalize',
'CP Scale Size': '', # Discontinued / NotImplemented
'CP Scale Life': '',
'CP Scale Trail': '',
'Position Along Epitrochoid': 'C_INIT_CreateInEpitrochoid',
    'offset from existing position': 'm_bOffsetExistingPos',
    'use particle count instead of creation time': 'm_bUseCount',
    'particle density': 'm_flParticleDensity',
    'point offset': 'm_flOffset',
    'radius 2': 'm_flRadius2',
    'radius 1': 'm_flRadius1',
    'first dimension 0-2 (-1 disables)': 'm_nComponent1',
    'second dimension 0-2 (-1 disables)': 'm_nComponent2',
    # m_bUseLocalCoords m_nScaleCP m_nControlPointNumber
'Movement Follow CP': '',
    'update particle life time': '',
    'lerp to CP radius speed': '',
    'catch up speed': '',
    'maximum end control point': '',
'Random position within a curved cylinder': 'C_INIT_CreateInCurvedCylinder', # made up
    'starting control point for cylinder': '',
    'maximum end control point for cylinder': '',
    'min scale factor for mapping cp velocity to particle velocity': '',
    'max scale factor for mapping cp velocity to particle velocity': '',
    'min scale factor for particle velocity along path': '',
    'max scale factor for particle velocity along path': '',
'Normal Align to CP': 'C_INIT_NormalAlignToCP',
'Assign target CP': '',
'Lifetime From Control Point Life Time': Discontinued(),
'Remap Speed to Scalar': 'C_INIT_RemapSpeedToScalar',
"""
t2 = """
'Position Along Ring': ('C_INIT_RingWave', {        
    'control point number': 'm_nControlPointNumber',
    'initial radius': 'm_flInitialRadius',
    'thickness': 'm_flThickness',
    'min initial speed': 'm_flInitialSpeedMin',     
    'max initial speed': 'm_flInitialSpeedMax',     
    'yaw': 'm_flYaw',
    'roll': 'm_flRoll',
    'pitch': 'm_flPitch',
    'even distribution': 'm_bEvenDistribution',
    'even distribution count': 'm_flParticlesPerOrbit',
    'XY velocity only': 'm_bXYVelocityOnly',
    'Override CP (X/Y/Z *= Radius/Thickness/Speed)': 'm_nOverrideCP',
    'Override CP 2 (X/Y/Z *= Pitch/Yaw/Roll)': 'm_nOverrideCP2',
}),
'Position Along Epitrochoid': ('C_INIT_CreateInEpitrochoid', {
    'control point number': 'm_nControlPointNumber',
    'first dimension 0-2 (-1 disables)': 'm_nComponent1',
    'second dimension 0-2 (-1 disables)': 'm_nComponent2',
    'radius 1': 'm_flRadius1',
    'radius 2': 'm_flRadius2',
    'point offset': 'm_flOffset',
    'particle density': 'm_flParticleDensity',
    'use particle count instead of creation time': 'm_bUseCount',
    'local space': 'm_bUseLocalCoords',
    'offset from existing position': 'm_bOffsetExistingPos',
    'scale from conrol point (radius 1/radius 2/offset)': 'm_nScaleCP',
}),
'Position on Model Random': ('C_INIT_CreateOnModel', {
    'control_point_number': 'm_nControlPointNumber',
    'force to be inside model': 'm_nForceInModel',
    'model hitbox scale': 'm_flHitBoxScale',
    'direction bias': 'm_vecDirectionBias',
    'desired hitbox': 'm_nDesiredHitbox',
    'hitbox set': 'm_HitboxSetName',
}),
'Set Hitbox to Closest Hitbox': ('C_INIT_SetHitboxToClosest', {
    'control_point_number': 'm_nControlPointNumber',
    'model hitbox scale': 'm_flHitBoxScale',
    'desired hitbox': 'm_nDesiredHitbox',
    'hitbox set': 'm_HitboxSetName',
}),
'Set Hitbox Position on Model': ('C_INIT_SetHitboxToModel', {
    'control_point_number': 'm_nControlPointNumber',
    'force to be inside model': 'm_nForceInModel',
    'model hitbox scale': 'm_flHitBoxScale',
    'direction bias': 'm_vecDirectionBias',
    'desired hitbox': 'm_nDesiredHitbox',
    'hitbox set': 'm_HitboxSetName',
    'maintain existing hitbox': 'm_bMaintainHitbox',
}),
'Position Within Sphere Random': ('C_INIT_CreateWithinSphere', {
    'distance_min': 'm_fRadiusMin',
    'distance_max': 'm_fRadiusMax',
    'distance_bias': 'm_vecDistanceBias',
    'distance_bias_absolute_value': 'm_vecDistanceBiasAbs',
    'bias in local system': 'm_bLocalCoords',
    'control_point_number': 'm_nControlPointNumber',
    'speed_min': 'm_fSpeedMin',
    'speed_max': 'm_fSpeedMax',
    'speed_random_exponent': 'm_fSpeedRandExp',
    'speed_in_local_coordinate_system_min': 'm_LocalCoordinateSystemSpeedMin',
    'speed_in_local_coordinate_system_max': 'm_LocalCoordinateSystemSpeedMax',
    'randomly distribute to highest supplied Control Point': 'm_bUseHighestEndCP',
    'randomly distribution growth time': 'm_flEndCPGrowthTime',
    'scale cp (distance/speed/local speed)': 'm_nScaleCP',
}),
'Position Within Box Random': ('C_INIT_CreateWithinBox', {
    'min': 'm_vecMin',
    'max': 'm_vecMax',
    'control point number': 'm_nControlPointNumber',
    'use local space': 'm_bLocalSpace',
}),
'Position Modify Offset Random': ('C_INIT_PositionOffset', {
    'control_point_number': 'm_nControlPointNumber',
    'offset min': 'm_OffsetMin',
    'offset max': 'm_OffsetMax',
    'offset in local space 0/1': 'm_bLocalCoords',
    'offset proportional to radius 0/1': 'm_bProportional',
}),
'Position Modify Place On Ground': ('C_INIT_PositionPlaceOnGround', {
    'offset': 'm_flOffset',
    'kill on no collision': 'm_bKill',
    'include water': 'm_bIncludeWater',
    'set normal': 'm_bSetNormal',
    'max trace length': 'm_flMaxTraceLength',
    'collision group': 'm_CollisionGroupName',
}),
'Velocity Random': ('C_INIT_VelocityRandom', {
    'control_point_number': 'm_nControlPointNumber',
    'random_speed_min': 'm_fSpeedMin',
    'random_speed_max': 'm_fSpeedMax',
    'speed_in_local_coordinate_system_min': 'm_LocalCoordinateSystemSpeedMin',
    'speed_in_local_coordinate_system_max': 'm_LocalCoordinateSystemSpeedMax',
}),
'Velocity Noise': ('C_INIT_InitialVelocityNoise', {
    'Control Point Number': 'm_nControlPointNumber',
    'Time Noise Coordinate Scale': 'm_flNoiseScale',
    'Spatial Noise Coordinate Scale': 'm_flNoiseScaleLoc',
    'Time Coordinate Offset': 'm_flOffset',
    'Spatial Coordinate Offset': 'm_vecOffsetLoc',
    'Absolute Value': 'm_vecAbsVal',
    'Invert Abs Value': 'm_vecAbsValInv',
    'output minimum': 'm_vecOutputMin',
    'output maximum': 'm_vecOutputMax',
    'Apply Velocity in Local Space (0/1)': 'm_bLocalSpace',
}),
'Lifetime Random': ('C_INIT_RandomLifeTime', {
    'lifetime_min': 'm_fLifetimeMin',
    'lifetime_max': 'm_fLifetimeMax',
    'lifetime_random_exponent': 'm_fLifetimeRandExponent',
}),
'Scalar Random': ('C_INIT_RandomScalar', {
    'min': 'm_flMin',
    'max': 'm_flMax',
    'exponent': 'm_flExponent',
    'output field': 'm_nFieldOutput',
}),
'Vector Random': ('C_INIT_RandomVector', {
    'min': 'm_vecMin',
    'max': 'm_vecMax',
    'output field': 'm_nFieldOutput',
}),
'Vector Component Random': ('C_INIT_RandomVectorComponent', {
    'min': 'm_flMin',
    'max': 'm_flMax',
    'component 0/1/2 X/Y/Z': 'm_nComponent',
    'output field': 'm_nFieldOutput',
}),
'Radius Random': ('C_INIT_RandomRadius', {
    'radius_min': 'm_flRadiusMin',
    'radius_max': 'm_flRadiusMax',
    'radius_random_exponent': 'm_flRadiusRandExponent',
}),
'Alpha Random': ('C_INIT_RandomAlpha', {
    'alpha_min': 'm_nAlphaMin',
    'alpha_max': 'm_nAlphaMax',
    'alpha_random_exponent': 'm_flAlphaRandExponent',
}),
'Rotation Random': ('C_INIT_RandomRotation', {
    'rotation_initial': 'm_flDegrees',
    'rotation_offset_min': 'm_flDegreesMin',
    'rotation_offset_max': 'm_flDegreesMax',
    'rotation_random_exponent': 'm_flRotationRandExponent',
    'randomly_flip_direction': 'm_bRandomlyFlipDirection',
}),
'Rotation Speed Random': ('C_INIT_RandomRotationSpeed', {
    'rotation_speed_constant': 'm_flDegrees',
    'rotation_speed_random_min': 'm_flDegreesMin',
    'rotation_speed_random_max': 'm_flDegreesMax',
    'rotation_speed_random_exponent': 'm_flRotationRandExponent',
    'randomly_flip_direction': 'm_bRandomlyFlipDirection',
}),
'Rotation Yaw Random': ('C_INIT_RandomYaw', {
    'yaw_initial': 'm_flDegrees',
    'yaw_offset_min': 'm_flDegreesMin',
    'yaw_offset_max': 'm_flDegreesMax',
    'yaw_random_exponent': 'm_flRotationRandExponent',
}),
'Color Random': ('C_INIT_RandomColor', {
    'color1': 'm_ColorMin',
    'color2': 'm_ColorMax',
    'tint_perc': 'm_flTintPerc',
    'tint control point': 'm_nTintCP',
    'tint clamp min': 'm_TintMin',
    'tint clamp max': 'm_TintMax',
    'tint update movement threshold': 'm_flUpdateThreshold',
    'tint blend mode': 'm_nTintBlendMode',
    'light amplification amount': 'm_flLightAmplification',
    'output field': 'm_nFieldOutput',
}),
'Color Lit Per Particle': ('C_INIT_ColorLitPerParticle', {
    'color1': 'm_ColorMin',
    'color2': 'm_ColorMax',
    'light bias': 'm_flTintPerc',
    'tint clamp min': 'm_TintMin',
    'tint clamp max': 'm_TintMax',
    'tint blend mode': 'm_nTintBlendMode',
    'light amplification amount': 'm_flLightAmplification',
}),
'Trail Length Random': ('C_INIT_RandomTrailLength', {
    'length_min': 'm_flMinLength',
    'length_max': 'm_flMaxLength',
    'length_random_exponent': 'm_flLengthRandExponent',
}),
'Sequence Random': ('C_INIT_RandomSequence', {
    'sequence_min': 'm_nSequenceMin',
    'sequence_max': 'm_nSequenceMax',
    'shuffle': 'm_bShuffle',
    'linear': 'm_bLinear',
}),
'Sequence From Control Point': ('C_INIT_SequenceFromCP', {
    'control point': 'm_nCP',
    'per particle spatial offset': 'm_vecOffset',
    'offset propotional to radius': 'm_bRadiusScale',
}),
'Position Modify Warp Random': ('C_INIT_PositionWarp', {
    'control point number': 'm_nControlPointNumber',
    'warp min': 'm_vecWarpMin',
    'warp max': 'm_vecWarpMax',
    'warp transition time (treats min/max as start/end sizes)': 'm_flWarpTime',
    'warp transition start time': 'm_flWarpStartTime',
    'reverse warp (0/1)': 'm_bInvertWarp',
    'use particle count instead of time': 'm_bUseCount',
}),
'Remap Noise to Scalar': ('C_INIT_CreationNoise', {
    'time noise coordinate scale': 'm_flNoiseScale',
    'spatial noise coordinate scale': 'm_flNoiseScaleLoc',
    'output field': 'm_nFieldOutput',
    'time coordinate offset': 'm_flOffset',
    'spatial coordinate offset': 'm_vecOffsetLoc',
    'absolute value': 'm_bAbsVal',
    'invert absolute value': 'm_bAbsValInv',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'world time noise coordinate scale': 'm_flWorldTimeScale',
}),
'Position Along Path Random': ('C_INIT_CreateAlongPath', {
    'maximum distance': 'm_fMaxDistance',
    **_m_PathParams,
    'randomly select sequential CP pairs between start and end points': 'm_bUseRandomCPs',
}),
'Move Particles Between 2 Control Points': ('C_INIT_MoveBetweenPoints', {
    'minimum speed': 'm_flSpeedMin',
    'maximum speed': 'm_flSpeedMax',
    'end spread': 'm_flEndSpread',
    'start offset': 'm_flStartOffset',
    'end offset': 'm_flEndOffset',
    'bias lifetime by trail length': 'm_bTrailBias',
    'end control point': 'm_nEndControlPointNumber',
}),
'Remap Initial Scalar': ('C_INIT_RemapScalar', {
    'emitter lifetime start time (seconds)': 'm_flStartTime',
    'emitter lifetime end time (seconds)': 'm_flEndTime',
    'input field': 'm_nFieldInput',
    'input minimum': 'm_flInputMin',
    'input maximum': 'm_flInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
    'only active within specified input range': 'm_bActiveRange',
}),
'Remap Particle Count to Scalar': ('C_INIT_RemapParticleCountToScalar', {
    'input minimum': 'm_nInputMin',
    'input maximum': 'm_nInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
    'only active within specified input range': 'm_bActiveRange',
}),
'Velocity Inherit from Control Point': ('C_INIT_InheritVelocity', {
    'control point number': 'm_nControlPointNumber',
    'velocity scale': 'm_flVelocityScale',
}),
'Velocity Set from Control Point': ('C_INIT_VelocityFromCP', {
    'control point number': 'm_nControlPoint',
    'velocity scale': 'm_flVelocityScale',
    'comparison control point number': 'm_nControlPointCompare',
    'local space control point number': 'm_nControlPointLocal',
    'direction only': 'm_bDirectionOnly',
}),
'Lifetime Pre-Age Noise': ('C_INIT_AgeNoise', {
    'time noise coordinate scale': 'm_flNoiseScale',
    'spatial noise coordinate scale': 'm_flNoiseScaleLoc',
    'time coordinate offset': 'm_flOffset',
    'spatial coordinate offset': 'm_vecOffsetLoc',
    'absolute value': 'm_bAbsVal',
    'invert absolute value': 'm_bAbsValInv',
    'start age minimum': 'm_flAgeMin',
    'start age maximum': 'm_flAgeMax',
}),
'Lifetime From Sequence': ('C_INIT_SequenceLifeTime', {
    'Frames Per Second': 'm_flFramerate',
}),
'Position In CP Hierarchy': ('C_INIT_CreateInHierarchy', {
    'maximum distance': 'm_fMaxDistance',
    'bulge': 'm_flBulgeFactor',
    'start control point number': 'm_nDesiredStartPoint',
    'end control point number': 'm_nDesiredEndPoint',
    'bulge control 0=random 1=orientation of start pnt 2=orientation of end point': 'm_nOrientation',
    'mid point position': 'm_flDesiredMidPoint',
    'growth time': 'm_flGrowthTime',
    'use highest supplied end point': 'm_bUseHighestEndCP',
    'distance_bias': 'm_vecDistanceBias',
    'distance_bias_absolute_value': 'm_vecDistanceBiasAbs',
}),
'Remap Scalar to Vector': ('C_INIT_RemapScalarToVector', {
    'emitter lifetime start time (seconds)': 'm_flStartTime',
    'emitter lifetime end time (seconds)': 'm_flEndTime',
    'input field': 'm_nFieldInput',
    'input minimum': 'm_flInputMin',
    'input maximum': 'm_flInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_vecOutputMin',
    'output maximum': 'm_vecOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
    'use local system': 'm_bLocalCoords',
    'control_point_number': 'm_nControlPointNumber',
}),
'Offset Vector to Vector': ('C_INIT_OffsetVectorToVector', {
    'input field': 'm_nFieldInput',
    'output field': 'm_nFieldOutput',
    'output offset minimum': 'm_vecOutputMin',
    'output offset maximum': 'm_vecOutputMax',
}),
'Position Along Path Sequential': ('C_INIT_CreateSequentialPath', {
    'maximum distance': 'm_fMaxDistance',
    **_m_PathParams,
    'particles to map from start to end': 'm_flNumToAssign',
    'restart behavior (0 = bounce, 1 = loop )': 'm_bLoop',
    'Use sequential CP pairs between start and end point': 'm_bCPPairs',
    'Save Offset': 'm_bSaveOffset',
}),
'Velocity Repulse from World': ('C_INIT_InitialRepulsionVelocity', {
    'minimum velocity': 'm_vecOutputMin',
    'maximum velocity': 'm_vecOutputMax',
    'collision group': 'm_CollisionGroupName',
    'control_point_number': 'm_nControlPointNumber',
    'Per Particle World Collision Tests': 'm_bPerParticle',
    'Use radius for Per Particle Trace Length': 'm_bPerParticleTR',
    'Offset instead of accelerate': 'm_bTranslate',
    'Offset proportional to radius 0/1': 'm_bProportional',
    'Trace Length': 'm_flTraceLength',
    'Inherit from Parent': 'm_bInherit',
    'control points to broadcast to children (n + 1)': 'm_nChildCP',
    'Child Group ID to affect': 'm_nChildGroupID',
}),
'Rotation Yaw Flip Random': ('C_INIT_RandomYawFlip', {
    'Flip Percentage': 'm_flPercent',
}),
'Sequence Two Random': ('C_INIT_RandomSecondSequence', {
    'sequence_min': 'm_nSequenceMin',
    'sequence_max': 'm_nSequenceMax',
}),
'Remap Control Point to Scalar': ('C_INIT_RemapCPtoScalar', {
    'emitter lifetime start time (seconds)': 'm_flStartTime',
    'emitter lifetime end time (seconds)': 'm_flEndTime',
    'input control point number': 'm_nCPInput',
    'input minimum': 'm_flInputMin',
    'input maximum': 'm_flInputMax',
    'input field 0-2 X/Y/Z': 'm_nField',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
}),
'Remap Control Point to Vector': ('C_INIT_RemapCPtoVector', {
    'emitter lifetime start time (seconds)': 'm_flStartTime',
    'emitter lifetime end time (seconds)': 'm_flEndTime',
    'input control point number': 'm_nCPInput',
    'input minimum': 'm_vInputMin',
    'input maximum': 'm_vInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_vOutputMin',
    'output maximum': 'm_vOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
    'offset position': 'm_bOffset',
    'accelerate position': 'm_bAccelerate',
    'local space CP': 'm_nLocalSpaceCP',
}),
'Position From Chaotic Attractor': ('C_INIT_ChaoticAttractor', {
    'Pickover A Parameter': 'm_flAParm',
    'Pickover B Parameter': 'm_flBParm',
    'Pickover C Parameter': 'm_flCParm',
    'Pickover D Parameter': 'm_flDParm',
    'Speed Min': 'm_flSpeedMin',
    'Speed Max': 'm_flSpeedMax',
    'Uniform speed': 'm_bUniformSpeed',
    'Relative Control point number': 'm_nBaseCP',
    'Scale': 'm_flScale',
}),
'Position From Parent Particles': ('C_INIT_CreateFromParentParticles', {
    'Inherited Velocity Scale': 'm_flVelocityScale',
    'Random Parent Particle Distribution': 'm_bRandomDistribution',
    'Particle Increment Amount': 'm_nIncrement',
}),
'Inherit Initial Value From Parent Particle': ('C_INIT_InheritFromParentParticles', {
    'Inherited Field': 'm_nFieldOutput',
    'Scale': 'm_flScale',
    'Random Parent Particle Distribution': 'm_bRandomDistribution',
    'Particle Increment Amount': 'm_nIncrement',
}),
'Remap Initial Distance to Control Point to Scalar': ('C_INIT_DistanceToCPInit', {
    'distance minimum': 'm_flInputMin',
    'distance maximum': 'm_flInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'control point': 'm_nStartCP',
    'ensure line of sight': 'm_bLOS',
    'LOS collision group': 'm_CollisionGroupName',
    'Maximum Trace Length': 'm_flMaxTraceLength',
    'LOS Failure Scalar': 'm_flLOSScale',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
    'only active within specified distance': 'm_bActiveRange',
}),
'Lifetime from Time to Impact': ('C_INIT_LifespanFromVelocity', {
    'trace collision group': 'm_CollisionGroupName',
    'maximum trace length': 'm_flMaxTraceLength',
    'trace offset': 'm_flTraceOffset',
    'trace recycle tolerance': 'm_flTraceTolerance',
    'maximum points to cache': 'm_nMaxPlanes',
    'bias distance': 'm_vecComponentScale',
    'collide with water': 'm_bIncludeWater',
}),
'Position from Parent Cache': ('C_INIT_CreateFromPlaneCache', {
    'Local Offset Min': 'm_vecOffsetMin',
    'Local Offset Max': 'm_vecOffsetMax',
    'Set Normal': 'm_bUseNormal',
}),
'Cull relative to model': ('C_INIT_ModelCull', {
    'control_point_number': 'm_nControlPointNumber',
    'use only bounding box': 'm_bBoundBox',
    'cull outside instead of inside': 'm_bCullOutside',
    'hitbox set': 'm_HitboxSetName',
}),
'Cull relative to Ray Trace Environment': ('C_INIT_RtEnvCull', {
    'cull on miss': 'm_bCullOnMiss',
    'velocity test adjust lifespan': 'm_bLifeAdjust',
    'use velocity for test direction': 'm_bUseVelocity',
    'test direction': 'm_vecTestDir',
    'cull normal': 'm_vecTestNormal',
    'ray trace environment name': 'm_RtEnvName',
}),
'Normal Align to CP': ('C_INIT_NormalAlignToCP', {
    'control_point_number': 'm_nControlPointNumber',
}),
'Normal Modify Offset Random': ('C_INIT_NormalOffset', {
    'control_point_number': 'm_nControlPointNumber',
    'offset min': 'm_OffsetMin',
    'offset max': 'm_OffsetMax',
    'offset in local space 0/1': 'm_bLocalCoords',
    'normalize output 0/1': 'm_bNormalize',
}),
'Remap Speed to Scalar': ('C_INIT_RemapSpeedToScalar', {
    'emitter lifetime start time (seconds)': 'm_flStartTime',
    'emitter lifetime end time (seconds)': 'm_flEndTime',
    'control point number (ignored if per particle)': 'm_nControlPointNumber',
    'per particle': 'm_bPerParticle',
    'input minimum': 'm_flInputMin',
    'input maximum': 'm_flInputMax',
    'output field': 'm_nFieldOutput',
    'output minimum': 'm_flOutputMin',
    'output maximum': 'm_flOutputMax',
    'output is scalar of initial random range': BoolToSetKV(k='m_nSetMethod', v='PARTICLE_SET_SCALE_CURRENT_VALUE'),
}),
'Init From CP Snapshot': ('C_INIT_InitFromCPSnapshot', {
    'snapshot control point number': 'm_nControlPointNumber',
    'field to write': 'm_nAttributeToWrite',
    'field to read': 'm_nAttributeToRead',
    'local space control point number': 'm_nLocalSpaceCP',
}),
'Init From Killed Parent Particle': ('C_INIT_InitFromParentKilled', {
    'field to init': 'm_nAttributeToCopy',
}),
'Remap Initial Direction to CP to Vector': ('C_INIT_RemapInitialDirectionToCPToVector', {
    'control point': 'm_nCP',
    'output field': 'm_nFieldOutput',
    'normalize': 'm_bNormalize',
    'offset axis': 'm_vecOffsetAxis',
    'offset rotation': 'm_flOffsetRot',
    'scale factor': 'm_flScale',
}),
'Remap CP Orientation to Rotation': ('C_INIT_RemapInitialCPDirectionToRotation', {
    'control point': 'm_nCP',
    'rotation field': 'm_nFieldOutput',
    'axis': 'm_nComponent',
    'offset rotation': 'm_flOffsetRot',
}),
"""

count = 0
for line in t.splitlines():
    if line.startswith("'"):
        count+=1
print(count);count=0
for line in t2.splitlines():
    if line.startswith("'"):
        count+=1
print(count);count=0